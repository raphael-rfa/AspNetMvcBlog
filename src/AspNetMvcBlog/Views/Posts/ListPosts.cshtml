@model PaginatedList<AspNetMvcBlog.Models.Entitys.Posts>

@{
    ViewData["Title"] = "Home Page";
}

<section id="posts">
        @if(Model.Count() == 0)
        {
            <h4>Nenhum post encontrado nessa categoria corresponde ao termo de busca</h4>
        }
    @foreach (var item in Model)
    {
        <div class="post">
            <h2><a asp-action="Details" asp-route-Permalink="@item.Permalink">@item.Title</a></h2>
            <p class="text-muted">
                Posted on <a href="#">@item.PublisheOn.ToShortDateString()</a>
                @if(item.Category != null)
                {
                    <span> in
                        <a asp-controller="Posts" asp-action="Search" asp-route-Permalink="@item.Category.Permalink">@item.Category.Name</a>
                    </span>
                }
            </p>
            <p>
                @item.Summary
            </p>
            <p>
                <a class="btn btn-primary btn-sm" asp-action="Details" asp-route-Permalink="@item.Permalink">
                    <i class="glyphicon glyphicon-circle-arrow-right"></i>&nbsp; Read more 
                </a>
                @await Html.PartialAsync("_AdminActions.cshtml", item)
            </p>
        </div>
    }

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Search"
       asp-route-permalink="@ViewData["permalink"]"
       asp-route-currentFilter="@ViewData["currentFilter"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Search"
       asp-route-permalink="@ViewData["permalink"]"
       asp-route-currentFilter="@ViewData["currentFilter"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn btn-default @nextDisabled">
        Next
    </a>
</section>