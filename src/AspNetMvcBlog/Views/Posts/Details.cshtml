@model AspNetMvcBlog.Models.ViewModel.PostComment 

@{
    ViewData["title"] = @Model!.Posts!.Title;
}

<section>
    <div class="post">
        <h2>@Model.Posts.Title</h2>
        <p class="text-muted">
            Posted on <a href="#">@Model.Posts.PublisheOn.ToShortDateString()</a>
            @if(Model.Posts.Category != null)
            {
                <span> in <a asp-controller="Posts" asp-action="Search" 
                    asp-route-Permalink="@Model.Posts.Category.Permalink">
                    @Model.Posts.Category.Name</a>
                </span>
            }
        </p>
        <div>
            @Model.Posts.Content
        </div>
    </div>
</section>

<section id="comments">
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-xs-12 col-md-8"> @Model.Posts.Comments.Count Comentários</div>
                <div class="col-xs-6 col-md-4">
                    <button data-target="#modal-comment" data-toggle="modal" asp-action="AddComment" asp-route-id="@Model.Posts.Id" class="btn btn-primary pull-right">Add comment</button>
                </div>
            </div>
        </div>
        <div class="list-group">
            @await Html.PartialAsync("_comments.cshtml", Model.Posts.Comments)
        </div>
        <div class="panel-footer">
            <button type="button" class="btn btn-primary btn-block"> More comments
                <i class="glyphicon glyphicon-chevron-down"></i>
            </button>
        </div>
    </div>
</section>

@await Html.PartialAsync("_commentmodal.cshtml", Model)

@section Scriptspage {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}